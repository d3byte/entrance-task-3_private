// –§—É–Ω–∫—Ü–∏—è, —Å–∏–º—É–ª–∏—Ä—É—é—â–∞—è –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
function fetchEvents(ms) {
    var events = [
        {
            "id": "1",
            "title": "–®–†–ò 2018 - –Ω–∞—á–∞–ª–æ",
            "dateStart": "2017-12-28T12:16:23.309Z",
            "dateEnd": "2017-12-28T14:57:23.309Z",
            "users": [
                {
                    "id": "1",
                    "login": "veged"
                },
                {
                    "id": "2",
                    "login": "alt-j"
                }
            ],
            "room": {
                "id": "1",
                "title": "404",
                "capacity": 5,
                "floor": 7
            }
        },
        {
            "id": "2",
            "title": "üëæ –•–∞–∫–∞—Ç–æ–Ω üëæ",
            "dateStart": "2017-12-28T14:57:23.309Z",
            "dateEnd": "2017-12-28T15:57:23.309Z",
            "users": [
                {
                    "id": "2",
                    "login": "alt-j"
                },
                {
                    "id": "3",
                    "login": "yeti-or"
                }
            ],
            "room": {
                "id": "2",
                "title": "–î–µ–Ω—å–≥–∏",
                "capacity": 4,
                "floor": 6
            }
        },
        {
            "id": "3",
            "title": "üç® –ü—Ä–æ–±—É–µ–º kefir.js",
            "dateStart": "2017-12-28T16:57:23.309Z",
            "dateEnd": "2017-12-29T21:57:23.309Z",
            "users": [
                {
                    "id": "1",
                    "login": "veged"
                },
                {
                    "id": "3",
                    "login": "yeti-or"
                }
            ],
            "room": {
                "id": "3",
                "title": "–ö–∞—Ä—Ç—ã",
                "capacity": 4,
                "floor": 7
            }
        }
    ]
    events = handleEventData(events)
    return new Promise((resolve, reject) => {
        setTimeout(() => resolve(events), ms)
    })
}

// –û–ø—Ä–µ–¥–µ–ª—è—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–∏—Ö —ç–≤–µ–Ω—Ç—É
function determineColAmount(eventId) {
    var amount = document.querySelectorAll(`.event-${eventId}`).length
    return amount
}

// –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É—é —Å—Ç—Ä–µ–ª–æ—á–∫—É —Ç—É–ª—Ç–∏–ø–∞
function positionArrow({layerX}, right) {
    var css = `
        .tooltip:before {
            left: ${layerX}px !important;
        }
    `,
        head = document.head || document.getElementsByTagName('head')[0],
        style = document.createElement('style');
    style.type = 'text/css';
    if (style.styleSheet) {
        style.styleSheet.cssText = css;
    } else {
        style.appendChild(document.createTextNode(css));
    }

    head.appendChild(style)
}

// –ü–æ–¥—Å–≤–µ—á–∏–≤–∞—é –∫–æ–ª–æ–Ω–∫–∏, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–∏–µ —ç–≤–µ–Ω—Ç—É
function highlightEventCols(id, amount) {
    for(var i = 0; i < amount; i++) {
        document.querySelectorAll(`.event-${id}`)[i].classList.add('active')
    }
}

// –ü—Ä–µ–æ–±—Ä–∞–∑—É—é –Ω–æ–º–µ—Ä –º–µ—Å—è—Ü–∞ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç
function monthNumToText(number) {
    const months = [
        '—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', 
        '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è', 
        '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', 
        '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'
    ]
    return months[number - 1]
}

// –ü—Ä–æ–≤–µ—Ä—è—é, –ø–æ–º–µ—â–∞–µ—Ç—Å—è –ª–∏ —Ç—É–ª—Ç–∏–ø –Ω–∞ —ç–∫—Ä–∞–Ω–µ. –ï—Å–ª–∏ –Ω–µ—Ç - –≤–Ω–æ—à—É –∫–æ—Ä—Ä–µ–∫—Ç–∏–≤—ã –≤ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
function checkForContentOverlay({clientX, layerX}, tooltip) {
    var leftBarWidth = window.getComputedStyle(document.querySelector('.left-bar'), null).getPropertyValue('width'),
        screenWidth = window.innerWidth
            || document.documentElement.clientWidth
            || document.body.clientWidth
    // 350 - —Ä–∞–∑–º–µ—Ä —Ç—É–ª—Ç–∏–ø–∞ —Å –∑–∞–ø–∞—Å–æ–º –≤ 10px
    if(screenWidth - clientX < 340) {
        var difference = Math.abs(340 - (screenWidth - clientX))
        var offset = layerX + difference
        if (offset > 340)
            offset = 320
        tooltip.style.left = '-' + difference + 'px'
        positionArrow({ layerX: offset })
    } else if (clientX - parseInt(leftBarWidth) < 30) {
        var difference = Math.abs(35 - (clientX - parseInt(leftBarWidth)))
        tooltip.style.left = + difference + 'px'
        positionArrow({ layerX: Math.abs(layerX - difference)})
    }
}
 
// –£–¥–∞–ª—è—é —Ä–∞–Ω–µ–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç—É–ª—Ç–∏–ø
function removePreviousTooltip() {
    var tooltip = document.querySelector('.tooltip'),
        active = document.querySelectorAll('.room.active')
    for(var i = 0; i < active.length; i++) {
        active[i].classList.remove('active')
    }
    if (tooltip) {
        tooltip.remove()
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, —Å–æ–∑–¥–∞—é—â–∞—è —Ç—É–ª—Ç–∏–ø
function createTooltip(e, event) {
    removePreviousTooltip()
    if(e.target.tagName != 'BUTTON') {
        var tooltip = document.createElement('div'),
            amount = determineColAmount(event.id)
        tooltip.classList.add('tooltip')
        highlightEventCols(event.id, amount)
        positionArrow(e)
        checkForContentOverlay(e, tooltip)
        tooltip.innerHTML = `
        <div class="header">
            <span class="title">${event.title}</span>
             <div class="icon-container">
                <img src="desktop-assets/edit-gray.png">
            </div>
        </div>
        <div class="time">
            <span>
                ${event.start.day} ${monthNumToText(event.start.month)},
                ${event.start.time.hours}:${event.start.time.minutes}‚Äì${event.end.time.hours}:${event.end.time.minutes}
            </span>
            <span class="dot">&#183;</span>
            <span>
                ${event.room.title}
            </span>
        </div>
        <div class="participants">
            <div class="avatar">
                <img src="desktop-assets/close.svg">
            </div>
            <span class="name">–î–∞—Ä—Ç –í–µ–π–¥–µ—Ä</span>
            <span class="left">–∏ 12 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</span> 
        </div>
    `

        if (screenWidth <= 768) {
            tooltip.style.width = screenWidth
        }
        e.target.appendChild(tooltip)
    }
}

// –°—Ç–∞–≤–ª—é –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —ç–≤–µ–Ω—Ç–æ–≤ –Ω–∞ –∫–æ–ª–æ–Ω–∫–∏
fetchEvents(0).then(res => {
    res.map(item => {
        item.hoursIncluded.map((hour, index) => {
            document.querySelectorAll(`.event-${item.id}`)[index].addEventListener('click', e => createTooltip(e, item))
        })
    })
})
